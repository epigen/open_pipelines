protocol_mapping:
  AMPLICON: amplicon_simple.py
  Amplicon: amplicon_simple.py
  ATAC: atacseq.py
  ATAC-seq: atacseq.py
  ATAC-SEQ: atacseq.py
  ChIA-PET: chiapet.py
  CHIP: chipseq.py
  CHIP-SEQ: chipseq.py
  CHIP-seq: chipseq.py
  CHIPMENTATION: chipseq.py
  ChIPmentation: chipseq.py
  DROP-SEQ: dropseq.py
  Drop-seq: dropseq.py
  STARR: starrseq.py
  STARR-SEQ: starrseq.py
  STARR-seq: starrseq.py
  RNA-SEQ: rnaseq.py
  RNA-seq: rnaseq.py

# The pipelines section describes how looper, which submits jobs, knows
# what resources to request for a pipeline, and what arguments to pass to the
# pipeline. For each pipeline, you specify two components: an arguments list,
# and a resources list, like so:


pipelines:
    amplicon_simple:
        name: amplicon_simple
        path: pipelines/amplicon_simple.py
        arguments:
            "-n": sample_name
            "-i": data_path
            "-a": amplicon
            "-g": guide_rna
        looper_args: True
        resources:
            default:
                file_size: "0"
                cores: 1
                mem: 8000
                time: "0:30:00"

    atacseq:
        name: ATAC-seq
        # sample_subtypes:
        #     ATAC-seq: ATACseqSample
        path: pipelines/atacseq.py
        arguments:
            "--sample-yaml": yaml_file
            "-G": genome
            "--protocol": protocol
            "--single-or-paired": read_type
        looper_args: True
        required_input_files: [read1]
        ngs_input_files: [read1, read2]
        resources:
            default:
                file_size: "0"
                cores: 4
                mem: 16000
                time: "08:00:00"
                partition: "shortq"
            medium:
                file_size: "1"
                cores: 8
                mem: 32000
                time: "1-12:00:00"
                partition: "mediumq"
            high:
                file_size: "2"
                cores: 12
                mem: 64000
                time: "4-00:00:00"
                partition: "longq"

    chipseq:
        name: ChIP-seq
        # sample_subtypes:
        #     ChIP-seq: ChIPseqSample
        path: pipelines/chipseq.py
        arguments:
            "--sample-yaml": yaml_file
            "-S": sample_name
            "-G": genome
        looper_args: True
        required_input_files: [data_path]
        ngs_input_files: [data_path]
        resources:
            default:
                file_size: "0"
                cores: 4
                mem: 16000
                time: "08:00:00"
                partition: "shortq"
            medium:
                file_size: "1"
                cores: 8
                mem: 32000
                time: "1-12:00:00"
                partition: "mediumq"
            high:
                file_size: "2"
                cores: 12
                mem: 64000
                time: "4-00:00:00"
                partition: "longq"

    dropseq:
        name: Drop-seq
        path: pipelines/dropseq.py
        arguments:
            "--sample-yaml": yaml_file
            "-S": sample_name
            "-G": genome
        looper_args: True
        resources:
            default:
                file_size: "0"
                cores: 8
                mem: 60000
                time: "1-12:00:00"
                partition: "mediumq"
            high:
                file_size: "4"
                cores: 8
                mem: 80000
                time: "3-12:00:00"
                partition: "longq"

    hic:
        name: Hi-C
        sample_subtypes:
            HiC: HiCSample
            Hi-C: HiCSample
            HiChIP: HiChIPSample
            Hi-ChIP: HiChIPSample
        path: pipelines/hic.py
        arguments:
            "--sample-yaml": yaml_file
            "-S": sample_name
            "-G": genome
        looper_args: True
        required_input_files: [data_path]
        ngs_input_files: [data_path]
        resources:
            default:
                file_size: "0"
                cores: 4
                mem: 16000
                time: "08:00:00"
                partition: "shortq"
            medium:
                file_size: "1"
                cores: 8
                mem: 32000
                time: "1-12:00:00"
                partition: "mediumq"
            high:
                file_size: "2"
                cores: 12
                mem: 64000
                time: "8-00:00:00"
                partition: "longq"

    rnaseq:
        name: RNA-seq
        sample_subtypes: 
            RNA-seq: RNASeqSample
            RNA: RNASeqSample
        path: pipelines/rnaseq.py
        arguments:
            "--sample-yaml": yaml_file
            "-S": sample_name
            "-G": genome
        looper_args: True
        required_input_files: [data_path]
        ngs_input_files: [data_path]
        resources:
            default:
                file_size: "0"
                cores: 1
                mem: 8000
                time: "01:00:00"
                partition: "shortq"
            medium:
                file_size: "1"
                cores: 2
                mem: 16000
                time: "08:00:00"
                partition: "longq"

    starrseq:
        name: STARR-seq
        # sample_subtypes: STARRseqSample
        path: pipelines/starrseq.py
        arguments:
            "--sample-yaml": yaml_file
            "-S": sample_name
            "-G": genome
        looper_args: True
        resources:
            default:
                file_size: "0"
                cores: 4
                mem: 16000
                time: "08:00:00"
                partition: "shortq"
            medium:
                file_size: "1"
                cores: 8
                mem: 32000
                time: "1-12:00:00"
                partition: "mediumq"
            high:
                file_size: "2"
                cores: 12
                mem: 64000
                time: "4-00:00:00"
                partition: "longq"
